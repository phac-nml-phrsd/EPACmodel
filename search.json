[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 EPACmodel authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/EPACmodel.html","id":"set-up-model-simulator","dir":"Articles","previous_headings":"","what":"Set up model simulator","title":"Introduction to EPACmodel","text":"work model, need set simulator. simulator macpan2 object includes model structure (state names, flow expressions, etc.) along set variable values (components flow rates, initial states) ensure ready produce simulation results. package includes several models whose simulators can quickly easily retrieved (see vignette(\"pkg-models\")). can also work locally defined models (see vignette(\"local-models\")). Package model names can listed : get model’s simulator, simply call: default, make_simulator() attach set default values variables model (components flow rates, initial states, etc.) model structure. also set default number time steps. can see default values easily follows: definition default value documented vignette(\"pkg-models\"). values can changed passing optional update.values argument make_simulator(). recommend first loading entire list default values extracting specific value (list element) want update, editing numeric quantity desired, passing modified list element make_simulator() via update.values argument, ensure format value preserved remain compatible model definition macpan2:","code":"list_models() #> [1] \"five-year-age-groups\" \"old-and-young\" model.name <- \"old-and-young\" model_simulator <- make_simulator(   model.name = model.name ) #> Warning in checkMatrixPackageVersion(): Package version inconsistency detected. #> TMB was built with Matrix version 1.6.1.1 #> Current Matrix version is 1.5.4.1 #> Please re-install 'TMB' from source using install.packages('TMB', type = 'source') or ask CRAN for a binary version of 'TMB' matching CRAN's 'Matrix' package # load default values (initial state, params, etc.) default.values = get_default_values(model.name) # get default initial state default.state = default.values$state print(\"default state:\") #> [1] \"default state:\" print(default.state) #>      S_y      R_y      E_y      I_y      H_y      D_y      S_o      R_o  #> 31400000        0        1        1        0        0  6900000        0  #>      E_o      I_o      H_o      D_o  #>        1        1        0        0  # move some young susceptibles to the recovered class new.state = default.state # copy over default value to preserve format new.state[\"R_y\"] = 1000 # modify specific elements new.state[\"S_y\"] = new.state[\"S_y\"] - new.state[\"R_y\"] # modify specific elements print(\"new state:\") #> [1] \"new state:\" print(new.state) #>      S_y      R_y      E_y      I_y      H_y      D_y      S_o      R_o  #> 31399000     1000        1        1        0        0  6900000        0  #>      E_o      I_o      H_o      D_o  #>        1        1        0        0  # use updated state to make a new simulator  new_model_simulator = make_simulator(   model.name = model.name,   updated.values = list(state = new.state) )"},{"path":"/articles/EPACmodel.html","id":"simulate-a-model","dir":"Articles","previous_headings":"","what":"Simulate a model","title":"Introduction to EPACmodel","text":"simulate model, just use simulate() function: Since model simulator already required values attached, required calculations can performed produce simulation results. models, simulation outputs stored data frame columns output value_types state: number individuals given state given time, total_inflow: total inflow given compartment given time. instance, number individuals state, stratified two age groups y (young) o (old), time 10: total inflow \\(\\) compartments can used extract disease incidence age time: can plot results using standard data manipulation plotting tools, like dplyr ggplot2:","code":"sim.output = simulate(model_simulator) time | state_name | value_type | value (sim.output  |> dplyr::filter(value_type == 'state', time == 10) ) #>    time state_name value_type        value #> 1    10        S_y      state 3.139988e+07 #> 2    10        E_y      state 7.888172e+01 #> 3    10        I_y      state 2.644023e+01 #> 4    10        H_y      state 5.068467e+00 #> 5    10        R_y      state 7.329988e+00 #> 6    10        D_y      state 7.329988e-01 #> 7    10        S_o      state 6.899959e+06 #> 8    10        E_o      state 2.621033e+01 #> 9    10        I_o      state 9.945527e+00 #> 10   10        H_o      state 2.328352e+00 #> 11   10        R_o      state 3.674943e+00 #> 12   10        D_o      state 3.674943e-01 (sim.output  |> dplyr::filter(    stringr::str_detect(state_name, \"^I\"),    value_type == 'total_inflow'  )  |> head() ) #>   time state_name   value_type     value #> 1    1        I_y total_inflow 0.1000000 #> 2    1        I_o total_inflow 0.1000000 #> 3    2        I_y total_inflow 0.0990000 #> 4    2        I_o total_inflow 0.0990000 #> 5    3        I_y total_inflow 0.1455143 #> 6    3        I_o total_inflow 0.1195285"},{"path":"/articles/EPACmodel.html","id":"scenarios","dir":"Articles","previous_headings":"","what":"Scenarios","title":"Introduction to EPACmodel","text":"default, make_simulator() initialize base model. model definitions include optional scenarios top base model, interventions modelled time-varying model parameters. instance, one simulate stay--home order reducing transmission rate given date amount. One can specify scenario.name argument make_simulator() attach required model structure simulate given scenario type. Scenario options descriptions catalogued vignette(\"pkg-models\"). demonstrate old--young model transmission-intervention scenario. default, scenario reduces transmission rate age group 50% 10% original value days 30 40, respectively: specify want use change-transmission scenario call make_simulator():","code":"values = get_default_values(\"old-and-young\")  values[   c(\"intervention.day\", \"trans.factor.young\", \"trans.factor.old\") ] #> $intervention.day #> [1] 40 50 #>  #> $trans.factor.young #> [1] 0.5 0.1 #>  #> $trans.factor.old #> [1] 0.5 0.1 model_simulator <- make_simulator(   model.name = \"old-and-young\",   scenario.name = \"change-transmission\" )  sim.output = simulate(model_simulator)"},{"path":"/articles/pkg-models.html","id":"old-and-young-model","dir":"Articles","previous_headings":"","what":"old-and-young model","title":"Package models","text":"version model features basic epidemiological structure stratified two age groups: young old. epidemiological compartments : \\(S\\): susceptible \\(E\\): exposed \\(\\): infected \\(H\\): hospitalized \\(R\\): recovered \\(D\\): dead flows within age group follows:  solid lines indicate flows compartments dashed lines indicate compartment involved calculating flow rate.","code":""},{"path":"/articles/pkg-models.html","id":"age-based-transmission","dir":"Articles","previous_headings":"old-and-young model","what":"Age-based transmission","title":"Package models","text":"force infection age group \\(\\), \\(\\lambda_i\\), per-capita rate flow age \\(\\) susceptibles exposed class (age), modelled \\[ \\lambda_i = \\sum_{j} c_{ij} \\beta_j I_j/N_j \\] \\(c_{ij}\\) contact rate susceptible age group \\(\\) infected age group \\(j\\), \\(\\beta_j\\) transmission rate age group \\(j\\), \\(I_j\\) number infectious individuals age group \\(j\\), \\(N_j\\) population size age group \\(j\\).","code":""},{"path":"/articles/pkg-models.html","id":"input-values","dir":"Articles","previous_headings":"old-and-young model","what":"Input values","title":"Package models","text":"several input values base model. inputs stratified age group (suffix _y young _o old). use generic suffix _j denote inputs age group j list : state: named list initial state simulation, name state follows pattern [epi-state]_j transmission_j: transmission rate, denoted \\(\\beta_j\\) force infection , c_ij: contact rate, denoted \\(c_{ij}\\) force infection , progression_j: rate flow exposed infectious, recovery_j: rate flow infectious recovered, hospitalization_j: rate flow infectious hospitalized, discharge_j: rate hospitalized recovered, deathH_j: rate flow hospitalized dead, deathI_j: rate flow infectious dead. Optional (scenario-specific) input values documented next section.","code":""},{"path":[]},{"path":"/articles/pkg-models.html","id":"change-transmission-scenario","dir":"Articles","previous_headings":"old-and-young model > Available scenarios","what":"change-transmission scenario","title":"Package models","text":"scenario simulates two changes age-dependent transmission rates specific days. Intervention days specified intervention.day input value. default values yield changes days 40 50. Scalar multiples original transmission rates specified via trans.factor.young trans.factor.old input values, young old, respectively. default values reduce transmission rate 50% 10% original value across age groups.","code":""},{"path":"/articles/pkg-models.html","id":"five-year-age-group-model","dir":"Articles","previous_headings":"","what":"five-year-age-group model","title":"Package models","text":"version model features basic epidemiological structure stratified five-year age groups age 80. epidemiological compartments : \\(S\\): susceptible \\(E\\): exposed \\(\\): infected \\(H\\): hospitalized \\(R\\): recovered \\(D\\): dead flows within age group follows:  solid lines indicate flows compartments dashed lines indicate compartment involved calculating flow rate.","code":""},{"path":"/articles/pkg-models.html","id":"age-based-transmission-1","dir":"Articles","previous_headings":"five-year-age-group model","what":"Age-based transmission","title":"Package models","text":"force infection age group \\(\\), \\(\\lambda_i\\), per-capita rate flow age \\(\\) susceptibles exposed class (age), modelled force infection occurs age-based way, proxy population heterogeneity. transmission rate susceptibles age infectious individuals age j calculated \\[ \\lambda_i = \\tau \\sum_{j} p_{ij} \\hat{c}_j I_j/N_j \\] \\(\\tau\\) transmissibility pathogen, quantified proportion contacts susceptible infectious individual yield transmission (independent age), \\(p_{ij}\\) proportion age group \\(\\)’s contacts occur age group \\(j\\), \\(\\hat{c}_j\\) average contact rate individuals age group \\(j\\) (across ages), \\(I_j\\) number infectious individuals age group \\(j\\) (given time), \\(N_j\\) population size age group \\(j\\). average contact rate vector (\\(\\hat{c}\\)) contact proportion matrix (\\(\\left[p_{ij}\\right]\\)) generated using weighted average four setting-based component contact matrices, derived Mistry et al (2021), reflect contacts households, workplaces, schools, community (contacts outside three previous settings). weights average overall contact rate per setting. weighted average generates overall contact matrix. row sums matrix give average contact rate vector, \\(\\left[\\hat{c}_j\\right]\\), row-normalized version matrix contact proportion matrix (\\(\\left[p_{ij}\\right]\\)).","code":""},{"path":"/articles/pkg-models.html","id":"input-values-1","dir":"Articles","previous_headings":"five-year-age-group model","what":"Input values","title":"Package models","text":"several input values base model. inputs stratified age group (suffix .lb[digit], [digit] denotes lower bound age group. example, .lb50 denotes 50-54 age group. use generic suffix .j denote inputs age group j list : state: named list initial state simulation, name state follows pattern [epi-state].j progression.j: rate flow exposed infectious, recovery.j: rate flow infectious recovered, hospitalization.j: rate flow infectious hospitalized, discharge.j: rate hospitalized recovered, death_H.j: rate flow hospitalized dead, death_I.j: rate flow infectious dead transmissibility: transmissibility proportion, denoted \\(\\tau\\) force infection , setting.weight: vector weights setting-specific component contact matrices, weight gives average contact rate per setting across ages, described . Optional (scenario-specific) input values documented next section.","code":""},{"path":[]},{"path":"/articles/pkg-models.html","id":"change-contacts-scenario","dir":"Articles","previous_headings":"five-year-age-group model > Available scenarios","what":"change-contacts scenario","title":"Package models","text":"scenario enables simulation intervention affects age-based contact patterns starting specified day start simulation (“intervention day”). intervention day specified intervention.day input value. default value simulates stay--home order starting day 25. intervention involves using new contact matrix starting intervention day, generated new setting weights, specified setting.weight.new input value. default values reflect closing schools, 50% workplaces, reducing community contacts 75% default setting.weight input value. user can also change overall transmissibility pathogen starting intervention day scalar multiple original value via trans.factor input value. default values include trans.factor = 1, change underlying transmissibility.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Irena Papst. Author, maintainer. Michael WZ Li. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Papst , WZ Li M (2023). EPACmodel: Use Early Pandemic Age-structured Compartmental (EPAC) model. https://phac-nml-phrsd.github.io/EPACmodel, https://github.com/phac-nml-phrsd/EPACmodel.","code":"@Manual{,   title = {EPACmodel: Use the Early Pandemic Age-structured Compartmental (EPAC) model},   author = {Irena Papst and Michael {WZ Li}},   year = {2023},   note = {https://phac-nml-phrsd.github.io/EPACmodel, https://github.com/phac-nml-phrsd/EPACmodel}, }"},{"path":"/index.html","id":"epacmodel","dir":"","previous_headings":"","what":"Use the Early Pandemic Age-structured Compartmental model","title":"Use the Early Pandemic Age-structured Compartmental model","text":"package implements Early Pandemic Age-Structured Compartmental (EPAC) model developed Michael WZ Li Irena Papst Public Health Risk Sciences Division Public Health Agency Canada using macpan2 modelling software. goal package catalogue, document, version iterations Early Pandemic Age-structured Compartmental model can pulled easily project-specific pipelines produce modelling outputs.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Use the Early Pandemic Age-structured Compartmental model","text":"Versioned releases EPACmodel can installed x.y.z version number. Available version numbers can found . development version EPACmodel can installed :","code":"remotes::install_github(\"phac-nml-phrsd/EPACmodel@vx.y.z\") remotes::install_github(\"phac-nml-phrsd/EPACmodel\")"},{"path":"/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Use the Early Pandemic Age-structured Compartmental model","text":"getting started guide can found vignette(\"EPACmodel\").","code":""},{"path":"/reference/get_default_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Get named list of default values for a model — get_default_values","title":"Get named list of default values for a model — get_default_values","text":"Get named list default values model","code":""},{"path":"/reference/get_default_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get named list of default values for a model — get_default_values","text":"","code":"get_default_values(model.name, local = FALSE)"},{"path":"/reference/get_default_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get named list of default values for a model — get_default_values","text":"model.name name model (see list_models() options) local logical. TRUE, use local model definition (models subdirectory main project repo). FALSE, use package models.","code":""},{"path":"/reference/get_default_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get named list of default values for a model — get_default_values","text":"Named list default values used initialize model simulation","code":""},{"path":"/reference/get_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a model object from model definition files — get_model","title":"Construct a model object from model definition files — get_model","text":"Construct model object model definition files","code":""},{"path":"/reference/get_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a model object from model definition files — get_model","text":"","code":"get_model(model.name, local = FALSE)"},{"path":"/reference/get_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a model object from model definition files — get_model","text":"model.name name model (see list_models() options) local logical. TRUE, use local model definition (models subdirectory main project repo). FALSE, use package models.","code":""},{"path":"/reference/get_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a model object from model definition files — get_model","text":"macpan2::Model() object","code":""},{"path":"/reference/get_model_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get file path for model files — get_model_path","title":"Get file path for model files — get_model_path","text":"internal use","code":""},{"path":"/reference/get_model_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get file path for model files — get_model_path","text":"","code":"get_model_path(model.name, file.name, dir.name = \"models\", local = FALSE)"},{"path":"/reference/get_model_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get file path for model files — get_model_path","text":"model.name name model (see list_models() options) file.name Optional. File name; NULL, return path model directory dir.name Directory name files (local files, must main project directory) local logical. TRUE, use local model definition (models subdirectory main project repo). FALSE, use package models.","code":""},{"path":"/reference/get_model_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get file path for model files — get_model_path","text":"file name complete file path","code":""},{"path":"/reference/list_models.html","id":null,"dir":"Reference","previous_headings":"","what":"List available models — list_models","title":"List available models — list_models","text":"names available use get_model()","code":""},{"path":"/reference/list_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List available models — list_models","text":"","code":"list_models(local = FALSE)"},{"path":"/reference/list_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List available models — list_models","text":"local logical. TRUE, use local model definition (models subdirectory main project repo). FALSE, use package models.","code":""},{"path":"/reference/list_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List available models — list_models","text":"Character vector model names","code":""},{"path":"/reference/make_simulator.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a simulator for a model — make_simulator","title":"Construct a simulator for a model — make_simulator","text":"Construct simulator model","code":""},{"path":"/reference/make_simulator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a simulator for a model — make_simulator","text":"","code":"make_simulator(   model.name,   scenario.name = NULL,   updated.values = NULL,   local = FALSE )"},{"path":"/reference/make_simulator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a simulator for a model — make_simulator","text":"model.name name model (see list_models() options) scenario.name Optional. Name scenario simulate. See README model.name options. NULL, use base model. updated.values Optional. List containing updates variables + values used initialize model simulator. NULL, use default list read disk used . local logical. TRUE, use local model definition (models subdirectory main project repo). FALSE, use package models.","code":""},{"path":"/reference/make_simulator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a simulator for a model — make_simulator","text":"macpan2::TMBSimulator() object","code":""},{"path":"/reference/mk_contact_pars.html","id":null,"dir":"Reference","previous_headings":"","what":"Make contact matrix from Mistry et al. data — mk_contact_pars","title":"Make contact matrix from Mistry et al. data — mk_contact_pars","text":"Make contact matrix Mistry et al. data","code":""},{"path":"/reference/mk_contact_pars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make contact matrix from Mistry et al. data — mk_contact_pars","text":"","code":"mk_contact_pars(age.group.lower, setting.weight)"},{"path":"/reference/mk_contact_pars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make contact matrix from Mistry et al. data — mk_contact_pars","text":"age.group.lower Numeric vector. Lower bounds desired age groups setting.weight Named numeric vector average contact rate setting reflect closures.","code":""},{"path":"/reference/mk_contact_pars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make contact matrix from Mistry et al. data — mk_contact_pars","text":"list : p.mat: row-normalized matrix contact probabilities c.hat: vector row sums contact rate matrix, giving average contact rate per age group; used set transmission vector maintain contact balance condition","code":""},{"path":"/reference/mk_pop_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Make population table using Mistry et al. data — mk_pop_table","title":"Make population table using Mistry et al. data — mk_pop_table","text":"Make population table using Mistry et al. data","code":""},{"path":"/reference/mk_pop_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make population table using Mistry et al. data — mk_pop_table","text":"","code":"mk_pop_table(age.group.lower = NULL)"},{"path":"/reference/mk_pop_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make population table using Mistry et al. data — mk_pop_table","text":"age.group.lower Numeric vector. Lower bounds desired age groups","code":""},{"path":"/reference/mk_pop_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make population table using Mistry et al. data — mk_pop_table","text":"data frame columns age: age group count: population count","code":""},{"path":"/reference/simulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate from a simulator — simulate","title":"Simulate from a simulator — simulate","text":"Simulate simulator","code":""},{"path":"/reference/simulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate from a simulator — simulate","text":"","code":"simulate(simulator)"},{"path":"/reference/simulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate from a simulator — simulate","text":"simulator Simulator object, initialized using make_simulator()","code":""},{"path":"/reference/simulate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate from a simulator — simulate","text":"data frame containing simulation results columns time: time days simulation start state_name: compartment name value_type: type values, state (count individuals compartment) total_inflow (total inflow compartment) value","code":""}]
